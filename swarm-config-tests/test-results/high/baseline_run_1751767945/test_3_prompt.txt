Solve the following optimization problem and provide a complete solution with implementation:

A logistics company needs to optimize their delivery route system. They have:
- N delivery locations in a 2D plane with coordinates (x_i, y_i)
- M delivery trucks, each with capacity C_j
- Each location i has demand d_i (packages to deliver)
- Each truck starts from depot at (0, 0) and must return
- Time window constraints: location i must be visited between [a_i, b_i]
- Fuel cost is proportional to Euclidean distance traveled

Objectives:
1. Minimize total distance traveled by all trucks
2. Ensure all demands are met
3. Respect capacity constraints
4. Meet time window requirements
5. Balance load across trucks (minimize max - min packages per truck)

Tasks:
1. Formulate this as a mathematical optimization problem
2. Prove whether the problem is NP-hard
3. Develop an efficient approximation algorithm
4. Implement the algorithm in Python
5. Analyze time and space complexity
6. Provide bounds on the approximation ratio
7. Create visualizations of example solutions

Test with:
N = 20 locations
M = 4 trucks
Capacities: [50, 40, 45, 55]
Demands: randomly between 5-15 packages
Time windows: 2-hour windows between 8 AM - 6 PM
Average speed: 30 km/h

Provide complete mathematical formulation, implementation, and analysis.